# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**\*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  buildTargetFrameworks: 'net5.0'
  releaseProject: '$(Build.SourcesDirectory)\SQLBrowser\SQLBrowser.csproj'
  timestamp: $[format('{0:yyyyMMddHHmmss}', pipeline.startTime)]

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\SQLBrowser\bin\$(buildConfiguration)\$(buildTargetFrameworks)\'
    Contents: 'SQLBrowser.dll'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\nuget'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\'
    Contents: 'DevFromDownUnder.SQLBrowser.nuspec'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: ExecutableInfoReader@1
  inputs:
    fileName: '$(Build.ArtifactStagingDirectory)\nuget\SQLBrowser.dll'
    variableRoot: 'SQLBrowser'
    loadProductVersion: false
    loadAssemblyVersion: true

- task: SimpleNuspecVersionSetter@1
  inputs:
    RootDirectory: '$(Build.ArtifactStagingDirectory)'
    NewVersion: '$(packageVersion)'

- task: VariableSetTask@1
  inputs:
    VariableName: 'packageVersion'
    Value: '$(SQLBrowser.AssemblyVersionInfo.Version)-preview-$(timestamp)'
    IsSecret: false

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.ArtifactStagingDirectory)\DevFromDownUnder.SQLBrowser.nuspec'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'packageVersion'
    basePath: '$(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)\*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'SQLBrowser/SQLBrowser-nuget-preview'

- task: DotNetCoreCLI@2
  displayName: Nuget.org api key workaround
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Build.ArtifactStagingDirectory)\*.nupkg
      -s https://api.nuget.org/v3/index.json
      -k $(NugetPAT)